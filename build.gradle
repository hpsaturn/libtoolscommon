apply plugin: 'com.android.library'

def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

def getGitBranch = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--abbrev-ref', 'HEAD'
        standardOutput = stdout
    }
    return stdout.toString().trim()
}

android {
    compileSdkVersion project.mCompileSdkVersion.toInteger()
    defaultConfig {
        minSdkVersion project.mMinSdkVersion.toInteger()
        targetSdkVersion project.mTargetSdkVersion.toInteger()
        versionCode project.mVersionCode.toInteger()
        versionName project.mVersionName
        buildConfigField "String", "GitHash", "\"${getGitHash()}\""
        buildConfigField "String", "GitBranch", "\"${getGitBranch()}\""
        buildConfigField "boolean", "isLoggerEnable", project.debugging
        buildConfigField "boolean", "withoutDevice", project.withoutDevice
        buildConfigField "String", "EnvTarget", project.env
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.0.0-beta01'
    implementation 'com.iamhabib:easy-preference:1.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
}
